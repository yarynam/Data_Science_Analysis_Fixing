x <- a
x <- 1
print(x)
x <- 1:20
x
1/ Inf
Dragon <- 4
Unicorn <- 6
Dragicon <- Dragon*Unicorn
source('~/.active-rstudio-document', echo=TRUE)
?median
??med
rsei212_chemical <- read.delim("~/Documents/Mizzou/DataScience/R/DecisionTreeFiles/rsei212_chemical.txt", header=FALSE)
View(rsei212_chemical)
puppyweights <- read.csv("~/Documents/Mizzou/DataScience/R/tutorial1/puppyweights.csv", header=FALSE)
View(puppyweights)
head(puppyweights)
tail(puppyweights)
View(puppyweights)
summary(puppyweights)
range(puppyweights$V1)
range(puppyweights$V4)
puppyweights <- read.csv("~/Documents/Mizzou/DataScience/R/tutorial1/puppyweights.csv")
View(puppyweights)
^L
range(puppyweights$Puppy2)
apply(puppyweights,2,max)
plot(puppyweights$Day,puppyweights$Puppy1)
mpg
mpg
library(ggplot)
install.packages("ggplot2")
library(ggplot2)
mpg
6+2
8*3
24-6
18/3
WorldPhones
class(WorldPhones)
paste("hello", "world")
a <- TRUE
class(a)
qplot(1:10,10:1)
qplot(1:10,1:10)
^L
con <- url("http://yarynam.github.io/droneProject/","r")
x <- readLines(con)
head(x)
x <- list(a=list(10,12,13), b=c(3,5,5))
x[[c(1,3)]]
x[[1]][[3]]
x[[c(2,2)]]
x<- matrix(1:6,2,3)
x[1,2]
x[2,1]
x[1,]
qplot(x,z,data=diamonds)
library("ggplot2")
qplot(x,z,data=diamonds)
qplot(carat, data=diamonds, binwidth=0.1)
qplot(carat, data=diamonds, binwidth=0.2, fill=cut)
qplot(carat, data=diamonds, binwidth=0.2, fill=cut) + zoom
qplot(carat, data=diamonds,geom="smooth")
activity <- read.csv("~/Documents/Mizzou/DataScience/R/preproject1/activity.csv")
View(activity)
clean_joined_grade_data <- read.csv("~/Documents/Mizzou/DataScience/R/preproject1/clean_joined_grade_data.csv")
View(clean_joined_grade_data)
alldata=merge(grades,activity,by="student_id")
View(clean_joined_grade_data)
View(clean_joined_grade_data)
View(clean_joined_grade_data)
View(clean_joined_grade_data)
activity <- read.csv("~/Documents/Mizzou/DataScience/R/preproject1/activity.csv")
View(activity)
grades <- read.csv("~/Documents/Mizzou/DataScience/R/preproject1/clean_joined_grade_data.csv", header=FALSE)
View(grades)
alldata=merge(grades,activity,by="student_id")
activity <- read.csv("~/Documents/Mizzou/DataScience/R/preproject1/activity.csv")
View(activity)
grades <- read.csv("~/Documents/Mizzou/DataScience/R/preproject1/clean_joined_grade_data.csv")
View(grades)
alldata=merge(grades,activity,by="student_id")
View(alldata)
alldata$start_time <- strptime(alldata$start_time,"%d-%m-%Y %H:%M:%S")
alldata$end_time <- strptime(alldata$end_time,"%d-%m-%Y %H:%M:%S")
alldata$timedif <- alldata$end_time - alldata$start_time
library(data.table)
alldata <-  data.table(alldata)
time_spend <- aggregate(alldata$timedif, by=list(student_id=alldata$student_id), FUN=sum)
time_spend$x <- as.numeric(time_spend$x)
names(time_spend)[names(time_spend)=="x"] <- "time_sum_per_id"
alldata=merge(alldata,time_spend,by="student_id")
time_spend2 <- aggregate(alldata$timedif, by=list(student_id=alldata$student_id, activity=alldata$activity), FUN=sum)
time_spend2$x <- as.numeric(time_spend2$x)
study <- grep("Study",  alldata$activity, value = TRUE)
study_time <-  time_spend2[ time_spend2$activity %in% study,]
study_time <- aggregate(study_time$x, by=list(student_id=study_time$student_id), FUN=sum)
names(study_time)[names(study_time)=="x"] <- "study_3_time_per_id"
study_time
alldata=merge(alldata,study_time,by="student_id")
ggplot(alldata, aes(x=study_3_time_per_id, y=ex_2_total)) +
geom_point(shape=1)
library(ggplot2)
ggplot(alldata, aes(x=study_3_time_per_id, y=ex_2_total)) +
geom_point(shape=1)
ggplot(alldata, aes(x=study_3_time_per_id, y=ex_2_total)) +
geom_point(shape=1)
ggplot(alldata, aes(x=study_3_time_per_id, y=ex_1_total)) +
geom_point(shape=1)
study <- grep("Study_Es_5",  alldata$activity, value = TRUE)
study <- grep("Study_Es_5",  alldata$activity, value = TRUE)
study_time <-  time_spend2[ time_spend2$activity %in% study,]
study_time <- aggregate(study_time$x, by=list(student_id=study_time$student_id), FUN=sum)
names(study_time)[names(study_time)=="x"] <- "study_3_time_per_id"
study_time
names(study_time)[names(study_time)=="x"] <- "study_5_time_per_id"
study_time
alldata=merge(alldata,study_time,by="student_id")
ggplot(alldata, aes(x=study_5_time_per_id, y=intermediate_session_5)) +
geom_point(shape=1)
ggplot(alldata, aes(x=study_5_time_per_id, y=intermediate_session_5)) +
geom_point(shape=1)
names(deeds_time)[names(deeds_time)=="x"] <- "deeds_time_per_id"
names(study_time)[names(study_time)=="x"] <- "study_5_time_per_id"
study_time
alldata=merge(alldata,study_time,by="student_id")
library(ggplot2)
ggplot(alldata, aes(x=study_5_time_per_id, y=intermediate_session_5)) +
geom_point(shape=1)
alldata=merge(grades,activity,by="student_id")
alldata=merge(grades,activity,by="student_id")
alldata=merge(grades,activity,by="student_id")
alldata$start_time <- strptime(alldata$start_time,"%d-%m-%Y %H:%M:%S")
alldata$end_time <- strptime(alldata$end_time,"%d-%m-%Y %H:%M:%S")
alldata$timedif <- alldata$end_time - alldata$start_time
alldata <-  data.table(alldata)
time_spend <- aggregate(alldata$timedif, by=list(student_id=alldata$student_id), FUN=sum)
time_spend$x <- as.numeric(time_spend$x)
names(time_spend)[names(time_spend)=="x"] <- "time_sum_per_id"
alldata=merge(alldata,time_spend,by="student_id")
time_spend2 <- aggregate(alldata$timedif, by=list(student_id=alldata$student_id, activity=alldata$activity), FUN=sum)
time_spend2$x <- as.numeric(time_spend2$x)
study <- grep("Study_Es_5",  alldata$activity, value = TRUE)
study_time <-  time_spend2[ time_spend2$activity %in% study,]
study_time <- aggregate(study_time$x, by=list(student_id=study_time$student_id), FUN=sum)
names(study_time)[names(study_time)=="x"] <- "study_5_time_per_id"
study_time
alldata=merge(alldata,study_time,by="student_id")
ggplot(alldata, aes(x=study_5_time_per_id, y=intermediate_session_5)) +
geom_point(shape=1)
deeds <- grep("Deeds_Es_5",  alldata$activity, value = TRUE)
deeds_time <-  time_spend2[ time_spend2$activity %in% deeds,]
deeds_time <- aggregate(deeds_time$x, by=list(student_id=deeds_time$student_id), FUN=sum)
names(deeds_time)[names(deeds_time)=="x"] <- "deeds_5_time_per_id"
deeds_time
alldata=merge(alldata,deeds_time,by="student_id")
ggplot(alldata, aes(x=deeds_5_time_per_id, y=intermediate_session_5)) +
geom_point(shape=1)
cor(deeds_5_time_per_id, intermediate_session_5)
cor(ex_1_total, ex_2_total)
cor(alldata$ex_1_total, alldata$ex_2_total)
firstex <- alldata$ex_1_total
secondex <- alldata$ex_2_total
cor(firstex, secondex)
cor(firstex,secondex,use="pairwise.complete.obs")
cor(alldata$deeds_5_time_per_id, alldata$intermediate_session_5, use="pairwise.complete.obs")
cor(alldata$study_5_time_per_id, alldata$intermediate_session_5, use="pairwise.complete.obs")
study <- grep("Study_Es",  alldata$activity, value = TRUE)
study <- grep("Study_Es",  alldata$activity, value = TRUE)
study_time <-  time_spend2[ time_spend2$activity %in% study,]
study_time <- aggregate(study_time$x, by=list(student_id=study_time$student_id), FUN=sum)
names(study_time)[names(study_time)=="x"] <- "study_time_per_id"
study_time
alldata=merge(alldata,study_time,by="student_id")
ggplot(alldata, aes(x=study_time_per_id, y=ex_1_total)) +
geom_point(shape=1)
cor(alldata$study_time_per_id, alldata$ex_1_total, use="pairwise.complete.obs")
vagon <- read.csv("~/Documents/Work/texty/railway/data/vagon_price_stat_2014.csv")
View(vagon)
vagon$sum_price = vagon$price + vagon$count
vagon_sum <- aggregate(vagon$sum_price, by=list(vagon$tipvg), FUN=sum)
View(vagon_sum)
vagon_sum <- aggregate(vagon$price, by=list(vagon$tipvg), FUN=sum)
vagon_sum <- aggregate(vagon$sum_price, by=list(vagon$tipvg), FUN=sum)
vagon$sum_price = vagon$price * vagon$count
vagon_sum <- aggregate(vagon$sum_price, by=list(vagon$tipvg), FUN=sum)
vagon_sum <- aggregate(vagon$count, by=list(vagon$tipvg), FUN=sum)
View(vagon_sum)
vagon_sum <- aggregate(vagon$sum_price, by=list(vagon$tipvg), FUN=sum)
climate.data <- read.csv("~/Documents/Mizzou/DataScience/Project1/Final/climate-data.csv")
View(climate.data)
data2002 <- subset(climate, YEAR == 2002 & MONTH == 4)
data2002 <- subset(climate.data, YEAR == 2002 & MONTH == 4)
View(data2002)
library(data.table)
data <-  data.table(climate.data)
medianco2 = aggregate(list(CO2_median= data$CO2), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(climate,medianco2,by=c("LAT","LONG","YEAR"))
alldata=merge(climate.data,medianco2,by=c("LAT","LONG","YEAR"))
View(data)
View(alldata)
mediantmp = aggregate(list(TMP_median= data$TMP), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(climate.data,mediantmp,by=c("LAT","LONG","YEAR"))
mediantmp = aggregate(list(TMP_median= data$TMP), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediantmp,by=c("LAT","LONG","YEAR"))
medianco2 = aggregate(list(CO2_median= data$CO2), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(climate.data,medianco2,by=c("LAT","LONG","YEAR"))
mediantmp = aggregate(list(TMP_median= data$TMP), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediantmp,by=c("LAT","LONG","YEAR"))
medianfrs = aggregate(list(FRS_median= data$FRS), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianfrs,by=c("LAT","LONG","YEAR"))
cor(alldata$TMP_median, alldata$FRS_median, use="pairwise.complete.obs")
medianvap = aggregate(list(VAP_median= data$VAP), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianvap,by=c("LAT","LONG","YEAR"))
cor(alldata$TMP_median, alldata$VAP_median, use="pairwise.complete.obs")
medianetr = aggregate(list(ETR_median= data$ETR), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianetr,by=c("LAT","LONG","YEAR"))
cor(alldata$TMP_median, alldata$ETR_median, use="pairwise.complete.obs")
medianch4 = aggregate(list(CH4_median= data$CH4), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(climate.data,medianch4,by=c("LAT","LONG","YEAR"))
cor(alldata$CO2_median, alldata$CH4_median, use="pairwise.complete.obs")
medianco2 = aggregate(list(CO2_median= data$CO2), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(climate.data,medianco2,by=c("LAT","LONG","YEAR"))
medianch4 = aggregate(list(CH4_median= data$CH4), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianch4,by=c("LAT","LONG","YEAR"))
cor(alldata$CO2_median, alldata$CH4_median, use="pairwise.complete.obs")
medianco = aggregate(list(CO_median= data$CO), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianco,by=c("LAT","LONG","YEAR"))
cor(alldata$CO_median, alldata$CH4_median, use="pairwise.complete.obs")
medianwet = aggregate(list(wet_median= data$WET), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianwet,by=c("LAT","LONG","YEAR"))
cor(alldata$CO_median, alldata$WET_median, use="pairwise.complete.obs")
cor(alldata$CO_median, alldata$wet_median, use="pairwise.complete.obs")
mediancld = aggregate(list(CLD_median= data$CLD), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediancld,by=c("LAT","LONG","YEAR"))
cor(alldata$CO_median, alldata$CLD_median, use="pairwise.complete.obs")
medianpre = aggregate(list(PRE_median= data$PRE), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianpre,by=c("LAT","LONG","YEAR"))
cor(alldata$CO_median, alldata$PRE_median, use="pairwise.complete.obs")
cor(alldata$CO_median, alldata$wet_median, use="pairwise.complete.obs")
mediandtr = aggregate(list(DTR_median= data$DTR), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediandtr,by=c("LAT","LONG","YEAR"))
cor(alldata$CO_median, alldata$DTR_median, use="pairwise.complete.obs")
medianglo = aggregate(list(GLO_median= data$GLO), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianglo,by=c("LAT","LONG","YEAR"))
cor(alldata$CO_median, alldata$GLO_median, use="pairwise.complete.obs")
cor(alldata$WET_median, alldata$CLD_median, use="pairwise.complete.obs")
cor(alldata$wet_median, alldata$CLD_median, use="pairwise.complete.obs")
cor(alldata$wet_median, alldata$GLO_median, use="pairwise.complete.obs")
cor(alldata$GLD_median, alldata$PRE_median, use="pairwise.complete.obs")
medianpre = aggregate(list(PRE_median= data$PRE), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianpre,by=c("LAT","LONG","YEAR"))
cor(alldata$GLD_median, alldata$PRE_median, use="pairwise.complete.obs")
mediancld = aggregate(list(CLD_median= data$CLD), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediancld,by=c("LAT","LONG","YEAR"))
cor(alldata$CLD_median.x, alldata$PRE_median.x, use="pairwise.complete.obs")
cor(alldata$CLD_median.x, alldata$FRS_median, use="pairwise.complete.obs")
medianco2 = aggregate(list(CO2_median= data$CO2), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(climate.data,medianco2,by=c("LAT","LONG","YEAR"))
mediancld = aggregate(list(CLD_median= data$CLD), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediancld,by=c("LAT","LONG","YEAR"))
medianfrs = aggregate(list(FRS_median= data$FRS), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianfrs,by=c("LAT","LONG","YEAR"))
cor(alldata$CLD_median., alldata$FRS_median, use="pairwise.complete.obs")
cor(alldata$CLD_median, alldata$FRS_median, use="pairwise.complete.obs")
mediandtr = aggregate(list(DTR_median= data$DTR), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediandtr,by=c("LAT","LONG","YEAR"))
cor(alldata$CLD_median, alldata$DTR_median, use="pairwise.complete.obs")
medianglo = aggregate(list(GLO_median= data$GLO), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianglo,by=c("LAT","LONG","YEAR"))
cor(alldata$CLD_median, alldata$GLO_median, use="pairwise.complete.obs")
medianetr = aggregate(list(ETR_median= data$ETR), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianetr,by=c("LAT","LONG","YEAR"))
cor(alldata$CLD_median, alldata$ETR_median, use="pairwise.complete.obs")
mediandir = aggregate(list(DIR_median= data$DIR), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediandir,by=c("LAT","LONG","YEAR"))
cor(alldata$CLD_median, alldata$DIR_median, use="pairwise.complete.obs")
medianuv = aggregate(list(UV_median= data$UV), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianuv,by=c("LAT","LONG","YEAR"))
cor(alldata$CLD_median, alldata$UV_median, use="pairwise.complete.obs")
medianpre = aggregate(list(PRE_median= data$PRE), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianpre,by=c("LAT","LONG","YEAR"))
medianvap = aggregate(list(VAP_median= data$VAP), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianvap,by=c("LAT","LONG","YEAR"))
cor(alldata$VAP_median, alldata$PRE_median, use="pairwise.complete.obs")
cor(alldata$VAP_median, alldata$FRS_median, use="pairwise.complete.obs")
cor(alldata$GLO_median, alldata$ETR_median, use="pairwise.complete.obs")
cor(alldata$GLO_median, alldata$DIR_median, use="pairwise.complete.obs")
cor(alldata$GLO_median, alldata$UV_median, use="pairwise.complete.obs")
cor(alldata$ETR_median, alldata$UV_median, use="pairwise.complete.obs")
cor(alldata$DIR_median, alldata$UV_median, use="pairwise.complete.obs")
mediantmp = aggregate(list(TMP_median= data$TMP), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,mediantmp,by=c("LAT","LONG","YEAR"))
cor(alldata$TMP_median, alldata$FRS_median, use="pairwise.complete.obs")
cor(alldata$TMP_median, alldata$VAP_median, use="pairwise.complete.obs")
cor(alldata$TMP_median, alldata$CO2_median, use="pairwise.complete.obs")
medianch4 = aggregate(list(CH4_median= data$CH4), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianch4,by=c("LAT","LONG","YEAR"))
cor(alldata$TMP_median, alldata$CH4_median, use="pairwise.complete.obs")
medianco = aggregate(list(CO_median= data$CO), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianco,by=c("LAT","LONG","YEAR"))
cor(alldata$TMP_median, alldata$CO_median, use="pairwise.complete.obs")
cor(alldata$VAP_median, alldata$CO_median, use="pairwise.complete.obs")
cor(alldata$VAP_median, alldata$CH4_median, use="pairwise.complete.obs")
cor(alldata$GLO_median, alldata$CH4_median, use="pairwise.complete.obs")
cor(alldata$GLO_median, alldata$C0_median, use="pairwise.complete.obs")
cor(alldata$GLO_median, alldata$CO_median, use="pairwise.complete.obs")
cor(alldata$CLD_median, alldata$CO_median, use="pairwise.complete.obs")
cor(alldata$WET_median, alldata$CO_median, use="pairwise.complete.obs")
cor(alldata$wet_median, alldata$CO_median, use="pairwise.complete.obs")
medianwet = aggregate(list(WET_median= data$WET), by=list(YEAR = data$YEAR, LAT = data$LAT, LONG = data$LONG), median)
alldata=merge(alldata,medianwet,by=c("LAT","LONG","YEAR"))
cor(alldata$WET_median, alldata$CO_median, use="pairwise.complete.obs")
cor(alldata$CO2_median, alldata$CO_median, use="pairwise.complete.obs")
cor(alldata$CO2_median, alldata$CH4_median, use="pairwise.complete.obs")
ggplot(alldata, aes(x=VAP_median, y=TMP_median)) +
geom_point(shape=19) +
labs(title = "Vapor and Temperature in October, 2002")  +
ylab("temperature") +
xlab("vapor")
library(ggplot2)
ggplot(alldata, aes(x=VAP_median, y=TMP_median)) +
geom_point(shape=19) +
labs(title = "Vapor and Temperature in October, 2002")  +
ylab("temperature") +
xlab("vapor")
ggplot(alldata, aes(x=VAP_median, y=TMP_median)) +
geom_point(shape=19) +
labs(title = "Average Vapor and Temperature per Year")  +
ylab("temperature") +
xlab("vapor")
ggplot(alldata, aes(x=VAP_median, y=TMP_median)) +
geom_point(shape=19) +
labs(title = "Average Vapor and Temperature per Year")  +
ylab("temperature") +
xlab("vapor")
ggplot(alldata, aes(x=CLD_median, y=TMP_median)) +
geom_point(shape=19) +
labs(title = "Average Cloud Cover and Temperature per Year")  +
ylab("temperature") +
xlab("cloud cover")
ggplot(alldata, aes(x=CLD_median, y=TMP_median)) +
geom_point(shape=19) +
labs(title = "Average Cloud Cover and Temperature per Year")  +
ylab("temperature") +
xlab("cloud cover")
cor(alldata$TMP_median, alldata$CLD_median, use="pairwise.complete.obs")
ggplot(alldata, aes(x=CLD_median, y=CO_median)) +
geom_point(shape=19) +
labs(title = "Average Cloud Cover and Temperature per Year")  +
ylab("CO") +
xlab("cloud cover")
ggplot(alldata, aes(x=CLD_median, y=CO_median)) +
geom_point(shape=19) +
labs(title = "Average Cloud Cover and Temperature per Year")  +
ylab("CO") +
xlab("cloud cover")
ggplot(alldata, aes(x=CLD_median, y=CO_median)) +
geom_point(shape=19) +
labs(title = "Average Cloud Cover and CO per Year")  +
ylab("CO") +
xlab("cloud cover")
cor(alldata$CO_median, alldata$CLD_median, use="pairwise.complete.obs")
ggplot(alldata, aes(x=CLD_median, y=WET_median)) +
geom_point(shape=19) +
labs(title = "Average Cloud Cover and Number of Wet Days per Year")  +
ylab("WET") +
xlab("cloud cover")
ggplot(alldata, aes(x=CO_median, y=WET_median)) +
geom_point(shape=19) +
labs(title = "Average CO and Number of Wet Days per Year")  +
ylab("WET") +
xlab("CO")
vagon <- read.csv("~/Documents/Work/texty/railway/data/vagon_price_stat_2014.csv")
View(vagon)
vagon$price_all = vagon$price * vagon$count
amount <- aggregate(vagon$price_all, by=list(tipvg=vagon$tipvg), FUN=sum)
View(amount)
number <- aggregate(vagon$count, by=list(tipvg=vagon$tipvg), FUN=sum)
View(number)
setwd("/Users/iaryna/Documents/Mizzou/DataScience/Project4/BigData_Group4")
TIMES_SCORE = read.csv("TIMES_SCORE.csv", encoding="UTF-8", stringsAsFactors = FALSE)
CWUR_SCORE = read.csv("CWUR_SCORE.csv", encoding="UTF-8", stringsAsFactors = FALSE)
PUBLIC = read.csv("public.csv", encoding="UTF-8", stringsAsFactors = FALSE,check.names=FALSE, header=FALSE)
PUBLIC$names <- lapply(PUBLIC, as.character)
PUBLIC_INST_TIMES = TIMES_SCORE[TIMES_SCORE$INSTNM %in% PUBLIC[1,],]
PUBLIC_INST_CWUR =  CWUR_SCORE[CWUR_SCORE$INSTNM %in% PUBLIC[1,],]
PRIVATE_INST_TIMES =TIMES_SCORE[!(TIMES_SCORE$INSTNM %in% PUBLIC[1,]),]
PRIVATE_INST_CWUR =  CWUR_SCORE[!(CWUR_SCORE$INSTNM %in% PUBLIC[1,]),]
require(ggplot2)
qplot(TIMES_SCORE$female_male_ratio, TIMES_SCORE$ADM_RATE_ALL)
qplot(TIMES_SCORE$female_male_ratio, TIMES_SCORE$ADM_RATE_ALL)
reg = lm(CWUR_SCORE$ADM_RATE_ALL ~ CWUR_SCORE$world_rank)
plot(CWUR_SCORE$world_rank, CWUR_SCORE$ADM_RATE_ALL)
abline(v = 194, col = "red")
abline(h = 0.7861, col = "red")
abline(reg)
reg = lm(CWUR_SCORE$ADM_RATE_ALL, CWUR_SCORE$national_rank)
plot(CWUR_SCORE$national_rank, CWUR_SCORE$ADM_RATE_ALL)
abline(reg)
reg = lm(CWUR_SCORE$NPT4_PUB ~ CWUR_SCORE$world_rank)
plot(CWUR_SCORE$world_rank, CWUR_SCORE$NPT4_PUB)
abline(reg)
reg = lm(CWUR_SCORE$RET_FT4 ~ CWUR_SCORE$world_rank)
plot(CWUR_SCORE$world_rank, CWUR_SCORE$RET_FT4)
abline(reg)
reg_pub = lm(PUBLIC_INST_CWUR$ACTCM75 ~ PUBLIC_INST_CWUR$world_rank)
reg_priv =lm(PRIVATE_INST_CWUR$ACTCM75 ~ PRIVATE_INST_CWUR$world_rank)
plot(PUBLIC_INST_CWUR$world_rank, PUBLIC_INST_CWUR$ACTCM75)
abline(reg_pub)
plot(PRIVATE_INST_CWUR$world_rank, PRIVATE_INST_CWUR$ACTCM75)
abline(reg_priv)
smoothScatter(PUBLIC_INST_CWUR$national_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
smoothScatter(PRIVATE_INST_CWUR$national_rank, PRIVATE_INST_CWUR$ADM_RATE_ALL)
smoothScatter(PUBLIC_INST_CWUR$national_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
View(TIMES_SCORE)
qplot(CWUR_SCORE$national_rank, CWUR_SCORE$ADM_RATE_ALL)
qplot(CWUR_SCORE$national_rank, CWUR_SCORE$ADM_RATE_ALL)
plot(CWUR_SCORE$world_rank, CWUR_SCORE$ADM_RATE_ALL)
plot(CWUR_SCORE$national_rank, CWUR_SCORE$ADM_RATE_ALL)
reg_public = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL ~ PUBLIC_INST_CWUR$world_rank)
plot(PUBLIC_INST_CWUR$world_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
abline(v = 194, col = "red")
abline(h = 0.7861, col = "red")
abline(reg_public)
reg_public = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL ~ PUBLIC_INST_CWUR$world_rank)
plot(PUBLIC_INST_CWUR$world_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
abline(reg_public)
reg_public_world_rank = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL ~ PUBLIC_INST_CWUR$world_rank)
plot(PUBLIC_INST_CWUR$world_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
abline(reg_public)
reg_public_national_rank = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL, PUBLIC_INST_CWUR$national_rank)
plot(PUBLIC_INST_CWUR$national_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
abline(reg_national_rank)
reg_public_nr = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL, PUBLIC_INST_CWUR$national_rank)
plot(PUBLIC_INST_CWUR$national_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
abline(reg__public_nr)
reg_public_nr = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL, PUBLIC_INST_CWUR$national_rank)
plot(PUBLIC_INST_CWUR$national_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
abline(reg_public_nr)
reg_public_nr = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL, PUBLIC_INST_CWUR$national_rank)
setwd("/Users/iaryna/Documents/Mizzou/DataScience/Project4/BigData_Group4")
TIMES_SCORE = read.csv("TIMES_SCORE.csv", encoding="UTF-8", stringsAsFactors = FALSE)
CWUR_SCORE = read.csv("CWUR_SCORE.csv", encoding="UTF-8", stringsAsFactors = FALSE)
PUBLIC = read.csv("public.csv", encoding="UTF-8", stringsAsFactors = FALSE,check.names=FALSE, header=FALSE)
PUBLIC$names <- lapply(PUBLIC, as.character)
PUBLIC_INST_TIMES = TIMES_SCORE[TIMES_SCORE$INSTNM %in% PUBLIC[1,],]
PUBLIC_INST_CWUR =  CWUR_SCORE[CWUR_SCORE$INSTNM %in% PUBLIC[1,],]
PRIVATE_INST_TIMES =TIMES_SCORE[!(TIMES_SCORE$INSTNM %in% PUBLIC[1,]),]
PRIVATE_INST_CWUR =  CWUR_SCORE[!(CWUR_SCORE$INSTNM %in% PUBLIC[1,]),]
require(ggplot2)
qplot(TIMES_SCORE$female_male_ratio, TIMES_SCORE$ADM_RATE_ALL)
qplot(CWUR_SCORE$national_rank, CWUR_SCORE$ADM_RATE_ALL)
reg = lm(CWUR_SCORE$ADM_RATE_ALL ~ CWUR_SCORE$world_rank)
plot(CWUR_SCORE$world_rank, CWUR_SCORE$ADM_RATE_ALL)
abline(v = 194, col = "red")
abline(h = 0.7861, col = "red")
abline(reg)
reg_public_wr = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL ~ PUBLIC_INST_CWUR$world_rank)
plot(PUBLIC_INST_CWUR$world_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
abline(reg_public_wr)
reg_public_nr = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL, PUBLIC_INST_CWUR$national_rank)
plot(PUBLIC_INST_CWUR$national_rank, PUBLIC_INST_CWUR$ADM_RATE_ALL)
abline(reg_public_nr)
reg_public_nr = lm(PUBLIC_INST_CWUR$ADM_RATE_ALL, PUBLIC_INST_CWUR$national_rank)
